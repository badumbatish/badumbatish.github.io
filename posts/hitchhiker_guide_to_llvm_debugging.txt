1:"$Sreact.fragment"
2:I[6874,["874","static/chunks/874-437a265a67d6cfee.js","880","static/chunks/app/posts/%5Bid%5D/page-f0f7551128d4c13f.js"],""]
3:I[7555,[],""]
4:I[1295,[],""]
5:I[7921,["874","static/chunks/874-437a265a67d6cfee.js","63","static/chunks/63-63ed21df6f1fc3e7.js","177","static/chunks/app/layout-05e345a4cd50b3e1.js"],"default"]
7:I[9665,[],"OutletBoundary"]
9:I[4911,[],"AsyncMetadataOutlet"]
b:I[9665,[],"ViewportBoundary"]
d:I[9665,[],"MetadataBoundary"]
e:"$Sreact.suspense"
10:I[8393,[],""]
:HL["/_next/static/media/7385e8d9d3c5518f-s.p.ttf","font",{"crossOrigin":"","type":"font/ttf"}]
:HL["/_next/static/css/3b37cf79ceb9ce8f.css","style"]
:HL["/_next/static/css/3864b451a61e4546.css","style"]
0:{"P":null,"b":"vIgqmkzpEmU2vDKtR9SEn","p":"","c":["","posts","hitchhiker_guide_to_llvm_debugging"],"i":false,"f":[[["",{"children":["posts",{"children":[["id","hitchhiker_guide_to_llvm_debugging","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3b37cf79ceb9ce8f.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"px-4 py-4","children":["$","body",null,{"className":"__className_d4e0c8 flex flex-col min-h-screen","children":[["$","$L2",null,{"href":"/","children":["$","div",null,{"className":"flex justify-center items-center py-4 ","children":["$","h1",null,{"className":"text-4xl font-bold","children":"Jasmine Tang"}]}]}],["$","div",null,{"className":"flex-1","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","$L5",null,{}],["$","footer",null,{"className":"footer self-center justify-center gap-2 pt-4 items-center italic ","children":["$","p",null,{"children":"Built by Jasmine with NextJS, TailwindCSS, and a tonnn of loveee :)"}]}]]}]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","hitchhiker_guide_to_llvm_debugging","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3864b451a61e4546.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L7",null,{"children":["$L8",["$","$L9",null,{"promise":"$@a"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$Lb",null,{"children":"$Lc"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Ld",null,{"children":["$","div",null,{"hidden":true,"children":["$","$e",null,{"fallback":null,"children":"$Lf"}]}]}]]}],false]],"m":"$undefined","G":["$10",[]],"s":false,"S":true}
c:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:null
12:I[8175,[],"IconMark"]
11:T1cda,<nav class="toc"><ol class="toc-level toc-level-1"><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#prologue">Prologue</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#introduction">Introduction</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#grepping">Grepping</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#git-blame-and-pull-requests">Git blame and pull requests</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#-print-after-all--print-changed-and-all-that">-print-after-all, -print-changed and all that</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#lldb-and-debuggers">lldb and debuggers</a><ol class="toc-level toc-level-2"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#llvmutilslldbdataformatterspy">llvm/utils/lldbDataFormatters.py</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#conditional-breakpoints">Conditional breakpoints</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#dump">dump.*</a></li></ol></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#gitbisect">gitbisect</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#llvm-reduce">llvm-reduce</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#rsp_bisectpy">rsp_bisect.py</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#tdiffpy">tdiff.py</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#llvm-extract">llvm-extract</a></li><li class="toc-item toc-item-h1"><a class="toc-link toc-link-h1" href="#reading-skills-experience-or-think-harder">Reading skills, experience, (or think harder)</a></li></ol></nav><h1 id="prologue"><a aria-hidden="true" tabindex="-1" href="#prologue"><span class="icon icon-link"></span></a>Prologue</h1>
<p>[TODO]: Jasmine you need to make your blog more personable, apparently there's a dude out plaglarising people's blog <a href="https://www.linkedin.com/posts/alexander-logunov_deeplearning-microlearning-criticalthinking-activity-7353354281934020608-rE2J?utm_source=share&#x26;utm_medium=member_desktop&#x26;rcm=ACoAAC6QhfkBsgNZDMpt_hworID-CPWTYLaq4kg" rel="nofollow" target="_blank">https://www.linkedin.com/posts/alexander-logunov_deeplearning-microlearning-criticalthinking-activity-7353354281934020608-rE2J?utm_source=share&#x26;utm_medium=member_desktop&#x26;rcm=ACoAAC6QhfkBsgNZDMpt_hworID-CPWTYLaq4kg</a></p>
<p>Hello everyone, how's everybody doing? I'm still chugging away at solving LLVM issues at Igalia :) Fall and winter's
coming soon, and by the time this blog's up, I will be turning a year older. Welp, another year a few
more blogs am i right hahahahhaa.</p>
<p>This blog will be detailing my debugging methods since working on LLVM. For the foreseeable future (while the blog
title has [ONGOING]), this blog will be continually updated with new knowledge of mine, given that I'm still new in llvm</p>
<h1 id="introduction"><a aria-hidden="true" tabindex="-1" href="#introduction"><span class="icon icon-link"></span></a>Introduction</h1>
<h1 id="grepping"><a aria-hidden="true" tabindex="-1" href="#grepping"><span class="icon icon-link"></span></a>Grepping</h1>
<p>Something something grepping is very helpful</p>
<h1 id="git-blame-and-pull-requests"><a aria-hidden="true" tabindex="-1" href="#git-blame-and-pull-requests"><span class="icon icon-link"></span></a>Git blame and pull requests</h1>
<p>For a beginner in a codebase (even a seasoned programmer),
the ability to obtain more information and context,
extending further than the code sitting in front of them, is extremely helpful.</p>
<p>With git blame: <a href="https://git-scm.com/docs/git-blame" rel="nofollow" target="_blank">https://git-scm.com/docs/git-blame</a></p>
<p>It's also helpful to look up on the internet for the commit's pull requests, either through github or through reviews.llvm.org</p>
<p>for example <a href="https://reviews.llvm.org/D124685?id=431828#inline-1213666" rel="nofollow" target="_blank">https://reviews.llvm.org/D124685?id=431828#inline-1213666</a> has a TODO, but without reading the PRs, the TODO would seem very unclear and hazy.</p>
<p>In other words, reading code is the first step, after that, commit messages provides greater additional context on the problems being solved and finally, the pull request
and the reviews.llvm provides opinions and directives.</p>
<h1 id="-print-after-all--print-changed-and-all-that"><a aria-hidden="true" tabindex="-1" href="#-print-after-all--print-changed-and-all-that"><span class="icon icon-link"></span></a>-print-after-all, -print-changed and all that</h1>
<h1 id="lldb-and-debuggers"><a aria-hidden="true" tabindex="-1" href="#lldb-and-debuggers"><span class="icon icon-link"></span></a>lldb and debuggers</h1>
<p>Give motivational thinking about</p>
<p>lldb has auto repeat on when you press sth then you press return</p>
<h2 id="llvmutilslldbdataformatterspy"><a aria-hidden="true" tabindex="-1" href="#llvmutilslldbdataformatterspy"><span class="icon icon-link"></span></a>llvm/utils/lldbDataFormatters.py</h2>
<p>Load into LLDB with 'command script import /path/to/lldbDataFormatters.py'</p>
<pre><code>...
(lldb) command script import /path/to/lldbDataFormatters.py
...
</code></pre>
<p>Gives out pretty printer for DenseMap, DenseSet, StringRef, SmallVector, SmallStrings</p>
<h2 id="conditional-breakpoints"><a aria-hidden="true" tabindex="-1" href="#conditional-breakpoints"><span class="icon icon-link"></span></a>Conditional breakpoints</h2>
<h2 id="dump"><a aria-hidden="true" tabindex="-1" href="#dump"><span class="icon icon-link"></span></a>dump.*</h2>
<p>The <code>dump()</code> helper function in llvm is basically a pretty printer for</p>
<p>A lot of the time, when you perform
ripgrep <code>void dump.*\(\) </code>
Loop class has dumpVerbose</p>
<p>RegAlloc class has dumpState</p>
<h1 id="gitbisect"><a aria-hidden="true" tabindex="-1" href="#gitbisect"><span class="icon icon-link"></span></a>gitbisect</h1>
<p>should spawn its own shell so git bisect run is not affected</p>
<h1 id="llvm-reduce"><a aria-hidden="true" tabindex="-1" href="#llvm-reduce"><span class="icon icon-link"></span></a>llvm-reduce</h1>
<p>Something about being interesting to be able to reduce.</p>
<h1 id="rsp_bisectpy"><a aria-hidden="true" tabindex="-1" href="#rsp_bisectpy"><span class="icon icon-link"></span></a>rsp_bisect.py</h1>
<p>rsp file is response file? not sure how relevant this will be or if newcomers will ever use it</p>
<h1 id="tdiffpy"><a aria-hidden="true" tabindex="-1" href="#tdiffpy"><span class="icon icon-link"></span></a>tdiff.py</h1>
<h1 id="llvm-extract"><a aria-hidden="true" tabindex="-1" href="#llvm-extract"><span class="icon icon-link"></span></a>llvm-extract</h1>
<h1 id="reading-skills-experience-or-think-harder"><a aria-hidden="true" tabindex="-1" href="#reading-skills-experience-or-think-harder"><span class="icon icon-link"></span></a>Reading skills, experience, (or think harder)</h1>
<p>Yep yep, you read it right</p>
<p>debugging also comes from lang ref:
for example, if you're creating a new instruction from another instruction, for example: llvm.reduce.and i32 to i1</p>6:["$","div",null,{"className":"py-12 flex flex-col items-center  justify-items-start mx-auto ","children":[["$","$L2",null,{"href":"/blog","className":"flex justify-center text-4xl","children":["$","h2",null,{"children":"My blog"}]}],["$","article",null,{"className":"p-8 prose pt-0.5 max-w-none w-full lg:w-1/2 md:w-4/6 sm:w-5/6 prose-sky mx-auto","children":[["$","div",null,{"className":"flex justify-center text-2xl font-bold ","children":["$","h2",null,{"children":"[ONGOING] Jasmine and the hitchhiker's guide to LLVM's debugging tools"}]}],["$","div",null,{"className":"flex justify-start text-xl font-bold underline","children":["$","h4",null,{"children":"8888-08-08"}]}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$11"}}]]}]]}]
a:{"metadata":[["$","title","0",{"children":"[ONGOING] Jasmine and the hitchhiker's guide to LLVM's debugging tools"}],["$","meta","1",{"name":"description","content":"Jasmine introduces to readers debugging techniques that would benefit their LLVM development."}],["$","link","2",{"rel":"icon","href":"/_next/static/media/pfp5.0daa0f7d.jpeg"}],["$","$L12","3",{}]],"error":null,"digest":"$undefined"}
f:"$a:metadata"
